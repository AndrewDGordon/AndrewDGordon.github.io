{"version":3,"file":"functions.js","mappings":"ujDAEA,IAEMA,EAAY,MAFlBC,EAAA,MAE0BC,EAS1B,SAAgBC,EAAIC,EAAeC,GACjC,OAAOD,EAAQC,EAASL,EAAEM,MAC5B,CAOA,SAAgBC,EAAMC,GACpB,IAAMC,EAAQC,aAAY,WACxB,IAAMC,EAAOC,IACbJ,EAAWK,UAAUF,EACvB,GAAG,KAEHH,EAAWM,WAAa,WACtBC,cAAcN,EAChB,CACF,CAMA,SAAgBG,IACd,OAAO,IAAII,MAAOC,oBACpB,CAQA,SAAgBC,EAAUC,EAAqBX,GAC7C,IAAIY,EAAS,EACPX,EAAQC,aAAY,WACxBU,GAAUD,EACVX,EAAWK,UAAUO,EACvB,GAAG,KAEHZ,EAAWM,WAAa,WACtBC,cAAcN,EAChB,CACF,CAQA,SAAgBY,EAAWC,GAGzB,OAFAC,QAAQC,IAAIF,GAELA,CACT,CAxDAG,EAAAA,IAAAtB,EASAsB,EAAAA,MAAAlB,EAeAkB,EAAAA,YAAAb,EAUAa,EAAAA,UAAAP,EAkBAO,EAAAA,WAAAJ,EAcA,IA8EMK,EAA6B,CACjCC,KAAM,QACNC,UAAW,QACXC,WAAY,UAGd,SAASC,EAAeC,GACtB,MAAO,CAAEJ,KAAM,SAAUE,WAAYE,EACvC,CAEA,SAASC,EAAeD,GACtB,MAAO,CAAEJ,KAAM,SAAUE,WAAYE,EACvC,CAEA,SAASE,EAAcC,GACrB,OAAuB,GAAnBA,EAAS5B,OACJoB,EAEF,CAAEC,KAAM,QAASO,SAAUA,EACpC,CAEA,IAsPMC,EAAoC,CAAC,EA0CvCC,EAAyCC,QAAQC,QAAQ,IAE7D,SAAeC,EAA+BC,G,yEAI5C,OAHMpB,EAASgB,EAAaK,MAAK,WAAM,OA5CzC,SAAkCD,G,8GAKhC,GAJME,EAAU,CACdC,OAAQ,OAGNR,EAAMK,GAER,OADAjB,QAAQC,IAAI,iBAAAoB,OAAiBJ,IACtB,CAAP,EAAOL,EAAMK,IAGTK,EAAmB,GACrBC,EAAO,EACPC,EAAwBP,E,wBACV,OAAXO,EAAe,OACdC,EAAQhC,KAAKiC,MAGnB,GAAM,IAAIZ,SAAQ,SAACC,GAAY,OAAAY,WAAWZ,EAAS,IAApB,M,OAEd,OAFjBa,EAAAC,OAEiB,GAAMC,MAAMN,EAAQL,I,OAErC,OAFMY,EAAWH,EAAAC,QAEHG,GAMS,GAAMD,EAASE,SALpCjC,QAAQkC,MAAM,kBAAAb,OAAkBU,EAASI,SACzCX,EAAS,KACT,O,cAGIY,EAAiBR,EAAAC,OACjBQ,EAAM5C,KAAKiC,MAEjBH,GAAQ,EACRvB,QAAQC,IAAI,gBAAAoB,OAAgBE,EAAI,QAAAF,QAAQgB,EAAMZ,GAAS,IAAI,WAAAJ,OAAUG,EAAM,WAAAH,OAAUe,EAAKE,QAE1FhB,EAAQiB,KAAIC,MAAZlB,EAAgBc,EAAKd,SACrBE,EAASY,EAAKK,MAAQ,K,aAIxB,OADA7B,EAAMK,GAAOK,EACN,CAAP,EAAOA,G,OAMgCoB,CAAmBzB,EAAnB,IAEvCJ,EAAehB,EAAO8C,OAAM,WAAM,WAAIC,MAAM,8BAAV,IAC3B,CAAP,EAAO/C,E,OAGT,IAAMgD,EAAW,CACfC,YAAa,YACbC,kBACE,8GACFC,kBAAmB,yBA0JrB,SAASC,EAAeC,GAGtB,IAAMC,EAAO,IAAI1D,KAAKyD,GAEtB,MAAO,CACL9C,KAAM,kBACNE,WAHS,OAAW6C,EAAKC,UAAuC,GAA3BD,EAAKE,oBAA2B,KAAQ,MAI7EC,aAAc,aAElB,CAEA,SAASC,EAAiBC,EAAgBC,GACxC,MAAO,CACLrD,KAAM,kBACNE,WAAYkD,EACZF,aAA0B,OAAZG,EAAoB,cAAgB,aAClDC,iBAAkB,CAChBC,SAAUF,GAGhB,CAEA,SAASG,EAAeC,GACtB,IAAMzB,EAAOyB,EAAMzB,KACb0B,EAA4BP,EAAiBnB,EAAK0B,cAAe1B,EAAKqB,UACtEM,EAAS3B,EAAK4B,oBAAoBC,KAAI,SAACC,GAAQ,OAAAA,EAAIC,IAAJ,IAAUC,KAAK,KAC9DC,EAAYjC,EAAKkC,sBAAsBL,KAAI,SAACC,GAAQ,OAAAA,EAAIC,IAAJ,IAAUC,KAAK,KACnEG,EAAYnC,EAAK4B,oBAAoBC,KAAI,SAACC,GAAQ,OAAAA,EAAIM,EAAJ,IAAQJ,KAAK,KAC/DK,EAAerC,EAAKkC,sBAAsBL,KAAI,SAACC,GAAQ,OAAAA,EAAIM,EAAJ,IAAQJ,KAAK,KA2C1E,MA1C4B,CAC1BhE,KAAM,SACNsE,KAAMtC,EAAKuC,MACXC,WAAY,CACVD,MAAOvC,EAAKuC,MACZE,UAAW5B,EAAeb,EAAKyC,WAC/Bd,OAAQA,EACRM,UAAWA,EACXP,cAAeA,EACfhB,YAAaV,EAAKU,YAClBgC,SAAUjB,EAAMiB,SAChBP,UAAWA,EACXE,aAAcA,EACdM,UAAW,+CAAiDlB,EAAMiB,SAClEE,eAAgBC,EAAepB,IAEjCqB,QAAS,CACPC,QAAS,CAAEC,KAAM,QACjBC,KAAM,CACJV,MAAO,CAAEW,SAAU,SACnBC,SAAU,CACR,CACEC,OAAQ,OACRZ,WAAY,CAAC,YAAa,SAAU,YAAa,gBAAiB,gBAEpE,CACEY,OAAQ,OACRb,MAAO,OACPC,WAAY,CAAC,WAAY,YAAa,eAAgB,YAAa,kBACnEa,aAAa,EACbC,WAAW,MAKnB7C,SAAU,CACRC,YAAaV,EAAKuC,MAAQ,yBAC1B5B,kBACE,8GACFC,kBAAmB,+CAAiDa,EAAMiB,UAIhF,CAiPA,SAASG,EAAezE,GAEtB,GAAa,MAATA,EAAe,OAAOL,EAC1B,cAAeK,GACb,IAAK,UACH,MAAO,CACLJ,KAAM,UACNE,WAAYE,GAGhB,IAAK,SACH,MAAO,CACLJ,KAAM,SACNE,WAAYE,GAGhB,IAAK,SACH,MAAO,CACLJ,KAAM,SACNE,WAAYE,GAGhB,IAAK,SACH,GAAIA,EAAMmF,cAAgBC,MAAO,CAC/B,IAAMC,EAASrF,EAAMzB,OACrB,GAAc,GAAV8G,EAAa,OAAO1F,EAGxB,IADA,IAAI2F,EAAO,IAAIF,MAAMC,GACZE,EAAI,EAAGA,EAAIF,EAAQE,IAAKD,EAAKC,GAAK,CAACC,EAAyBxF,EAAMuF,KAC3E,OAAOrF,EAAcoF,E,CAGvB,IAAMG,EAAMzF,EACR0F,EAAO,GACPC,EAAyC,CAAC,EAC9C,IAAK,IAAIC,KAAOH,EACd,GAAIA,EAAII,eAAeD,GAAM,CAE3B,IADA,IAAIE,EAAWF,EAAIG,cAEjBJ,EAAQE,eAAeC,IAEvBA,GAAY,IACd,IAAME,EAAQP,EAAIG,GAClBD,EAAQG,GAAYrB,EAAeuB,GACnC,IAAMC,SAAYD,EAEdE,EAAWJ,GADO,YAAPG,GAA2B,WAAPA,GAA0B,WAAPA,EAClB,IAAMD,EAAMG,WAAa,IAC7CT,EAAJ,IAARA,EAAmBQ,EACXR,EAAO,IAAMQ,C,CAI7B,MAAO,CACLtG,KAAM,SACNsE,KAAMwB,EACNtB,WAAYuB,GAGhB,QACE,MAAO,CACL/F,KAAM,SACNE,WAAY,wBAGpB,CAGA,SAAS0F,EAAyBxF,GAChC,GAAa,MAATA,EAAe,OAAOL,EAC1B,IAAMyG,EAAQ3B,EAAezE,GAC7B,MACO,iBADQA,GAEPA,EAAMmF,cAAgBC,MACjB,CACLxF,KAAM,SACNsE,KAAM,eACNE,WAAY,CAAEiC,MAAOD,IAMlBA,CAEb,CAEAE,gBAAgBC,UAAU,MAAOnI,GACjCkI,gBAAgBC,UAAU,QAAS/H,GACnC8H,gBAAgBC,UAAU,YAAapH,GACvCmH,gBAAgBC,UAAU,MAAOjH,GACjCgH,gBAAgBC,UAAU,mBA7hB1B,SAA+BC,G,kGAGf,SAAMhG,EADRiG,+CAAmBD,EAAS,gC,OAExC,OADMxG,EAAQoB,EAAAC,kBACOe,MACZ,CAAP,EAAO,CACLxC,KAAM,SACNsE,KAAM,GAAArD,OAAG2F,EAAM,sCACfpC,WAAY,CAAE1C,MAAO1B,EAAMT,SAC3B8C,SAAUA,KAGRqE,EAAkB1G,EACjB,CAAP,EAAO,CACLJ,KAAM,SACNsE,KAAM,GAAArD,OAAG2F,EAAM,cAAA3F,OAAab,EAAMzB,OAAM,WACxC6F,WAAY,CACVsC,OAAQxG,EAAcwG,EAAOjD,KAAI,SAACJ,GAAU,OAACD,EAAeC,GAAhB,MAE9ChB,SAAU,CACRC,YAAa,GAAAzB,OAAG2F,EAAM,iBACtBjE,kBACE,8GACFC,kBAAmB,6CAA+CgE,M,UAugBxEF,gBAAgBC,UAAU,eA5f1B,SAA2BC,G,kGAGX,SAAMhG,EADRiG,+CAAmBD,EAAS,4B,OAExC,OADMxG,EAAQoB,EAAAC,kBACOe,MACZ,CAAP,EAAO,CACLxC,KAAM,SACNsE,KAAM,GAAArD,OAAG2F,EAAM,kCACfpC,WAAY,CAAE1C,MAAO1B,EAAMT,SAC3B8C,SAAUA,KAGRqE,EAAkB1G,EACjB,CAAP,EAAO,CACLJ,KAAM,SACNsE,KAAM,GAAArD,OAAG2F,EAAM,UAAA3F,OAASb,EAAMzB,OAAM,WACpC6F,WAAY,CACVsC,OAAQxG,EAAcwG,EAAOjD,KAAI,SAACJ,GAAU,OAACD,EAAeC,GAAhB,MAE9ChB,SAAU,CACRC,YAAa,GAAAzB,OAAG2F,EAAM,iBACtBjE,kBACE,8GACFC,kBAAmB,6CAA+CgE,M,UAsexEF,gBAAgBC,UAAU,sBA3d1B,SAAkCI,G,yGAGhC,IAFMtH,EAAuC,GACvCuH,EAAID,EAAcpI,OACfsI,EAAI,EAAGA,EAAID,EAAGC,IAIrB,IAHMC,EAAMH,EAAcE,GAAG,GACvBE,EAAgBD,EAAIE,MAAM,KAEvBzB,EAAI,EAAGA,EAAIwB,EAAIxI,OAAQgH,IAC9B,IAAS0B,EAAI,EAAGA,EAAIF,EAAIxI,OAAQ0I,IAC1B1B,IAAM0B,GACR5H,EAAO0C,KAAK,CAAChC,EAAegH,EAAIxB,IAAKxF,EAAegH,EAAIE,MAOhE,IADIC,EAAkC,CAAC,EAC9B3B,EAAI,EAAGA,EAAIlG,EAAOd,OAAQgH,IAC3BnE,EAAS/B,EAAOkG,GAAf4B,EAAC/F,EAAA,GAAEgG,EAAChG,EAAA,GACLwE,EAAMuB,EAAErH,WAAa,IAAMsH,EAAEtH,WACnCoH,EAAKtB,IAAQsB,EAAKtB,IAAQ,GAAK,EAKjC,IADMD,EAAqD,GAC3D0B,EAAA,EAA2BC,EAAAC,OAAOC,QAAQN,GAAfG,EAAAC,EAAA/I,OAAA8I,IAAhBI,EAAAH,EAAAD,GAACzB,EAAG6B,EAAA,GAAEzH,EAAKyH,EAAA,GACdV,EAAgBnB,EAAIoB,MAAM,KAChCrB,EAAQ5D,KAAK,CAAChC,EAAegH,EAAI,IAAKhH,EAAegH,EAAI,IAAK9G,EAAeD,KAU/E,MAAO,CAAP,EAPe,CACbJ,KAAM,SACNsE,KAAM,qBACNE,WAAY,CACVsD,mBAAoBxH,EAAcyF,K,UA0bxCW,gBAAgBC,UAAU,mBA9a1B,SAA+BC,G,sGAIZ,OAFXmB,EADU,oCACUnB,EAET,GAAMlF,MAAMqG,EAAU,QAAS,CAAE/G,OAAQ,S,OAC1D,OADMW,EAAWH,EAAAC,QACHG,GAGG,GAAMD,EAASE,QAFvB,CAAP,EAAO,kBAAAZ,OAAkBU,EAASI,S,OAKpC,OAHMiG,EAAWxG,EAAAC,OACjB7B,QAAQC,IAAImI,GACNvI,EAwFR,SAA0BsI,EAAiBC,GAiHzC,MAhH4B,CAC1BhI,KAAM,SACNsE,KAAM0D,EAAQjE,KACdS,WAAY,CACVT,KAAMiE,EAAQjE,KACdkE,wBAAyBD,EAAQC,wBACjCvF,YAAamC,EAAemD,EAAQtF,aACpCwF,uBAAwBrF,EAAemF,EAAQE,wBAC/CC,aAAsC,MAAxBH,EAAQG,aAAuBpI,EAAiBoD,EAAiB6E,EAAQG,aAAc,OACrGC,eAA0C,MAA1BJ,EAAQI,eAAyBrI,EAAiBoD,EAAiB6E,EAAQI,eAAgB,OAC3GC,gBAAiBxD,EAAemD,EAAQK,iBACxCC,iBAAkBzD,EAAemD,EAAQM,kBACzCC,aAAc1D,EAAemD,EAAQO,cAErCC,UAAW3D,EAAemD,EAAQQ,WAClCC,MAAO5D,EAAemD,EAAQS,OAC9BC,SAAUV,EAAQU,SAAS7E,KAAI,SAAC8E,GAAQ,OAAAA,EAAI5E,IAAJ,IAAUC,KAAK,KACvD4E,QACEZ,EAAQY,QAAQC,cAAgB,KAAOb,EAAQY,QAAQE,gBAAkB,KAAOd,EAAQY,QAAQG,WAClGlI,IAAKgE,EAAemD,EAAQnH,KAE5BuD,GAAI4D,EAAQ5D,GACZ4E,cAAenE,EAAemD,EAAQgB,eACtCC,cAAepE,EAAemD,EAAQiB,eACtCC,OAAQ,CAAElJ,KAAM,UAAWE,WAAY8H,EAAQkB,QAC/CC,eAAgBtG,EAAemF,EAAQmB,gBACvCC,YAAqC,MAAvBpB,EAAQoB,YAAsB,iBAAmBvG,EAAemF,EAAQoB,aAEtFC,OAAQxE,EAAemD,EAAQqB,QAC/BC,iBAAkBtB,EAAQsB,iBAAiBtF,KAAK,KAChDuF,cAAevB,EAAQuB,cAAcvF,KAAK,KAE1CwF,QAASxB,EAAQwB,QAAQxF,KAAK,KAC9ByF,MAAOzB,EAAQyB,MAAM5F,KAAI,SAAC6F,GAAS,OAAAA,EAAKC,KAAO,KAAOD,EAAK7I,GAAxB,IAA6BmD,KAAK,KACrE4F,OAAQ5B,EAAQ4B,OAAO5F,KAAK,KAC5B6F,eAAgB7B,EAAQ6B,eAAehG,KAAI,SAACiG,GAAQ,OAAAA,EAAIC,MAAQ,KAAOD,EAAIjJ,GAAvB,IAA4BmD,KAAK,KACrFgG,aAAcnH,EAAemF,EAAQgC,cACrCC,iBAAkBpF,EAAemD,IAEnClD,QAAS,CACPC,QAAS,CAAEC,KAAM,gBACjBC,KAAM,CACJV,MAAO,CAAEW,SAAU,QACnBC,SAAU,CACR,CACEC,OAAQ,OACRZ,WAAY,CAAC,gBAEf,CACEY,OAAQ,OACRb,MAAO,GAAAtD,OAAG+G,EAAQkB,OAAS,SAAW,WAAU,KAAAjI,OAAI+G,EAAQC,wBAAuB,aAAAhH,OAAY+G,EAAQgB,cAAa,WAAA/H,OAAU+G,EAAQmB,gBACtI3E,WAAY,CACV,KACA,gBACA,gBACA,0BACA,SACA,iBACA,cACA,SACA,mBACA,iBAEFa,aAAa,EACbC,WAAW,GAEb,CACEF,OAAQ,OACRb,MAAO,wBACPC,WAAY,CACV,yBACA,eACA,iBACA,kBACA,mBACA,gBAEFa,aAAa,EACbC,WAAW,GAEb,CACEF,OAAQ,OACRb,MAAO,UACPC,WAAY,CAAC,YAAa,QAAS,UAAW,OAC9Ca,aAAa,EACbC,WAAW,GAEb,CACEF,OAAQ,OACRb,MAAO,OACPC,WAAY,CACV,UACA,WACA,QACA,SACA,iBACA,eACA,oBAEFa,aAAa,EACbC,WAAW,MAKnB7C,SAAU,CACRC,YAAasF,EAAQjE,KAAO,sBAC5BpB,kBACE,8GACFC,kBAAmBmF,GAIzB,CA1MiBmC,CAAiBnC,EAASC,GAClC,CAAP,EAAOvI,G,UAoaTiH,gBAAgBC,UAAU,iBAAkB9D,GAC5C6D,gBAAgBC,UAAU,YApN1B,SAAwB9F,G,oGAChBE,EAAU,CACdC,OAAQ,O,iBAOS,O,sBAAA,GAAMU,MAAMb,EAAKE,I,OAClC,KADMY,EAAWH,EAAAC,QACHG,GACZ,MAAM,IAAIY,MAAM,kBAAAvB,OAAkBU,EAASI,SAG9B,SAAMJ,EAASE,Q,OAC9B,MAAO,CAAP,EAAOgD,EADQrD,EAAAC,S,OAIf,O,WADA7B,QAAQC,IAAIsK,GACL,CAAP,EAAOtF,EAAe,WAAasF,EAAIxK,U,2BAmM3C+G,gBAAgBC,UAAU,kBAzL1B,SAA8B9F,G,8GACtBE,EAAU,CACdC,OAAQ,O,iBAOS,O,sBAAA,GAAMU,MAAMb,EAAKE,I,OAClC,KADMY,EAAWH,EAAAC,QACHG,GACZ,MAAM,IAAIY,MAAM,kBAAAvB,OAAkBU,EAASI,SAGhC,SAAMJ,EAAS2C,Q,OACd,SADD9C,EAAAC,OACY2F,MAAM,O,OAG/B,IAHMgD,EAAQ5I,EAAAC,OACVuF,EAAIoD,EAAMzL,OAAS,EACnB8H,EAAQ,IAAIjB,MAAMwB,GACbrB,EAAI,EAAGA,EAAIqB,EAAGrB,IAAK,CACpB9D,EAAOuI,EAAMzE,GACnB,IACEc,EAAMd,GAAK0E,KAAKC,MAAMF,EAAMzE,G,CAC5B,MAAO4E,GACP9D,EAAMd,GAAK,kBAAoB9D,EAAO,UAAYA,EAAKlD,M,EAM3D,MAAO,CAAP,EAFckG,EAAe,CAAE2F,MAAO/D,K,OAKtC,O,WADA7G,QAAQC,IAAI4K,GACL,CAAP,EAAO5F,EAAe,WAAa4F,EAAI9K,U,2BA0J3C+G,gBAAgBC,UAAU,aA/I1B,SAAyB9F,EAAK6J,G,oGACtB3J,EAAU,CACdC,OAAQ,OACR2J,QAAS,CACP,eAAgB,oBAElBC,KAAMF,G,iBAMW,O,sBAAA,GAAMhJ,MAAMb,EAAKE,I,OAClC,KADMY,EAAWH,EAAAC,QACHG,GACZ,MAAM,IAAIY,MAAM,kBAAAvB,OAAkBU,EAASI,SAG9B,SAAMJ,EAASE,Q,OAC9B,MAAO,CAAP,EAAOgD,EADQrD,EAAAC,S,OAIf,O,WADA7B,QAAQC,IAAIgL,GACL,CAAP,EAAOhG,EAAe,WAAagG,EAAIlL,U,2BA2H3C+G,gBAAgBC,UAAU,aAjH1B,SAAmBrC,GACjB,OAAOwG,mBAAmBxG,EAC5B,IAgHAoC,gBAAgBC,UAAU,cAxG1B,SAAoB9E,GAElB,OAAOgD,EADKwF,KAAKC,MAAMzI,GAEzB,G,iFCh7Ba/B,EAAAA,EAAY,O,GCArBiL,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAapL,QAGrB,IAAIsL,EAASL,EAAyBE,GAAY,CAGjDnL,QAAS,CAAC,GAOX,OAHAuL,EAAoBJ,GAAUK,KAAKF,EAAOtL,QAASsL,EAAQA,EAAOtL,QAASkL,GAGpEI,EAAOtL,OACf,CCnB0BkL,CAAoB,M","sources":["webpack://excel-custom-functions/./src/functions/functions.ts","webpack://excel-custom-functions/./src/functions/types.ts","webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/startup"],"sourcesContent":["/* global clearInterval, console, CustomFunctions, setInterval */\n\nimport { MyType, y } from \"./types\";\n\nconst x: MyType = \"foo\" + y;\n\n/**\n * Adds two numbers.\n * @customfunction\n * @param first First number\n * @param second Second number\n * @returns The sum of the two numbers.\n */\nexport function add(first: number, second: number): number {\n  return first + second + x.length;\n}\n\n/**\n * Displays the current time once a second.\n * @customfunction\n * @param invocation Custom function handler\n */\nexport function clock(invocation: CustomFunctions.StreamingInvocation<string>): void {\n  const timer = setInterval(() => {\n    const time = currentTime();\n    invocation.setResult(time);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Returns the current time.\n * @returns String with the current time formatted for the current locale.\n */\nexport function currentTime(): string {\n  return new Date().toLocaleTimeString();\n}\n\n/**\n * Increments a value once a second.\n * @customfunction\n * @param incrementBy Amount to increment\n * @param invocation Custom function handler\n */\nexport function increment(incrementBy: number, invocation: CustomFunctions.StreamingInvocation<number>): void {\n  let result = 0;\n  const timer = setInterval(() => {\n    result += incrementBy;\n    invocation.setResult(result);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Writes a message to console.log().\n * @customfunction LOG\n * @param message String to write.\n * @returns String to write.\n */\nexport function logMessage(message: string): string {\n  console.log(message);\n\n  return message;\n}\n\n// json-excel.ts\n// Load this code file using ScriptLab to make JSON functionality available as custom functions in Excel\n// Documentation: https://docs.microsoft.com/en-us/office/dev/add-ins/excel/excel-data-types-overview\n// Types of custom functions: https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-json-autogeneration\n// Data type explorer: https://github.com/OfficeDev/Office-Add-in-samples/blob/main/Samples/excel-data-types-explorer/src/taskpane/taskpane.ts\n// Excel PIVOTBY: https://support.microsoft.com/en-us/office/pivotby-function-de86516a-90ad-4ced-8522-3a25fac389cf\n\n// example of a layout card\nconst card: Card = {\n  title: {\n    property: \"Product Name\",\n  },\n  mainImage: {\n    property: \"Image\",\n  },\n  sections: [\n    {\n      layout: \"List\",\n      properties: [\"Product ID\"],\n    },\n    {\n      layout: \"List\",\n      title: \"Quantity and price\",\n      collapsible: true,\n      collapsed: false, // This section will not be collapsed when the card is opened.\n      properties: [\"Quantity Per Unit\", \"Unit Price\"],\n    },\n    {\n      layout: \"List\",\n      title: \"Additional information\",\n      collapsible: true,\n      collapsed: true, // This section will be collapsed when the card is opened.\n      properties: [\"Discontinued\"],\n    },\n  ],\n};\n\ntype Card = {\n  title: { property: string };\n  mainImage?: { property: string };\n  sections: Array<{\n    layout: \"List\";\n    title?: string;\n    collapsible?: boolean;\n    collapsed?: boolean;\n    properties: Array<string>;\n  }>;\n};\n\ntype ExcelEntity = {\n  type: \"Entity\";\n  text: string;\n  properties: { [key: string]: ExcelValue };\n  provider?: { description: string; logoSourceAddress: string; logoTargetAddress: string };\n  layouts?: {\n    compact?: {\n      icon: string; // eg \"Gift\" see icon list here: https://learn.microsoft.com/en-us/javascript/api/excel/excel.entitycompactlayouticons\n    };\n    card?: Card;\n  };\n};\n\ntype ExcelArray = { type: \"Array\"; elements: Array<Array<ExcelValue>> }; // elements cannot be the empty array\ntype ExcelString = { type: \"String\"; basicValue: string };\ntype ExcelDouble = { type: \"Double\"; basicValue: number };\ntype ExcelBoolean = { type: \"Boolean\"; basicValue: boolean };\ntype ExcelError = { type: \"Error\"; basicType: \"Error\"; basicValue: string };\ntype ExcelFormattedNumber = {\n  type: \"FormattedNumber\";\n  basicValue: number;\n  numberFormat: string;\n  propertyMetadata?: { sublabel: string };\n};\n\n// How different types of Excel values to be returned to Excel\ntype ExcelValue =\n  | number\n  | string\n  | ExcelEntity\n  | ExcelArray\n  | ExcelString\n  | ExcelDouble\n  | ExcelBoolean\n  | ExcelError\n  | ExcelFormattedNumber;\n\nconst nullErrorValue: ExcelError = {\n  type: \"Error\",\n  basicType: \"Error\",\n  basicValue: \"#NULL!\",\n};\n\nfunction mk_ExcelString(value: string): ExcelString {\n  return { type: \"String\", basicValue: value };\n}\n\nfunction mk_ExcelDouble(value: number): ExcelDouble {\n  return { type: \"Double\", basicValue: value };\n}\n\nfunction mk_ExcelArray(elements: Array<Array<ExcelValue>>): ExcelValue {\n  if (elements.length == 0) {\n    return nullErrorValue;\n  }\n  return { type: \"Array\", elements: elements };\n}\n\nconst romsey = {\n  id: \"GB-CHC-1069905\",\n  name: \"ROMSEY MILL TRUST\",\n  charityNumber: \"1069905\",\n  companyNumber: \"03556721\",\n  description:\n    \"Romsey Mill's activities, enabling vulnerable and disadvantaged young people children and families to thrive, include intensive 1-to-1 support, early-years care & education, Children's Centre services, parenting courses, work in schools, detached youth work, interest-based group work (e.g. sport,arts,music), training and alternative education, IAG sessions, trips & outdoor residential experiences.\",\n  url: \"http://www.romseymill.org\",\n  latestFinancialYearEnd: \"2023-03-31\",\n  latestIncome: 1544824,\n  latestSpending: 1485573,\n  latestEmployees: 37,\n  latestVolunteers: 164,\n  trusteeCount: 8,\n  dateRegistered: \"1998-06-04\",\n  dateRemoved: null,\n  active: true,\n  parent: null,\n  organisationType: [\n    \"Registered Company\",\n    \"Registered Charity\",\n    \"Incorporated Charity\",\n    \"Registered Charity (England and Wales)\",\n  ],\n  organisationTypePrimary: \"Registered Charity\",\n  alternateName: [\n    \"THE MILL\",\n    \"TRANSITIONS PROGRAMME\",\n    \"YOUNG PARENT PROGRAMME\",\n    \"SOCIAL INCLUSION PROGRAMME\",\n    \"UNDER FIVES PROGRAMME\",\n    \"ROMSEY MILL\",\n    \"ASPIRE\",\n  ],\n  telephone: \"01223213162\",\n  email: \"admin@romseymill.org\",\n  location: [\n    {\n      id: \"CB1 3BZ\",\n      name: \"CB1 3BZ\",\n      geoCode: \"E07000008\",\n      type: \"HQ\",\n    },\n    {\n      id: \"E10000003\",\n      name: \"Cambridgeshire\",\n      geoCode: \"E10000003\",\n      type: \"AOO\",\n    },\n  ],\n  address: {\n    streetAddress: \"ROMSEY MILL, HEMINGFORD ROAD\",\n    addressLocality: \"CAMBRIDGE\",\n    postalCode: \"CB1 3BZ\",\n  },\n  sources: [\"ccew\"],\n  links: [\n    {\n      site: \"Find that Charity\",\n      url: \"https://findthatcharity.uk/orgid/GB-CHC-1069905.json\",\n      orgid: \"GB-CHC-1069905\",\n    },\n    {\n      site: \"romseymill.org\",\n      url: \"http://www.romseymill.org\",\n      orgid: \"GB-CHC-1069905\",\n    },\n    {\n      site: \"Charity Commission England and Wales\",\n      url: \"https://register-of-charities.charitycommission.gov.uk/charity-details/?regId=1069905&subId=0\",\n      orgid: \"GB-CHC-1069905\",\n    },\n    {\n      site: \"CharityBase\",\n      url: \"https://search.charitybase.uk/chc/1069905\",\n      orgid: \"GB-CHC-1069905\",\n    },\n    {\n      site: \"Giving is Great\",\n      url: \"https://givingisgreat.org/charitydetail/?regNo=1069905\",\n      orgid: \"GB-CHC-1069905\",\n    },\n    {\n      site: \"Companies House\",\n      url: \"https://find-and-update.company-information.service.gov.uk/company/03556721\",\n      orgid: \"GB-COH-03556721\",\n    },\n    {\n      site: \"Opencorporates\",\n      url: \"https://opencorporates.com/companies/gb/03556721\",\n      orgid: \"GB-COH-03556721\",\n    },\n  ],\n  orgIDs: [\"GB-COH-03556721\", \"GB-CHC-1069905\"],\n  linked_records: [\n    {\n      orgid: \"GB-CHC-1069905\",\n      url: \"https://findthatcharity.uk/orgid/GB-CHC-1069905.json\",\n    },\n    {\n      orgid: \"GB-COH-03556721\",\n      url: \"https://findthatcharity.uk/orgid/GB-COH-03556721.json\",\n    },\n  ],\n  dateModified: \"2024-07-27T01:08:56.178Z\",\n};\n\ntype Charity = {\n  id: string;\n  name: string;\n  charityNumber: string;\n  companyNumber: string;\n  description: string;\n  url: string;\n  latestFinancialYearEnd: string;\n  latestIncome: number;\n  latestSpending: number;\n  latestEmployees: number;\n  latestVolunteers: number;\n  trusteeCount: number;\n  dateRegistered: string;\n  dateRemoved: string | null;\n  active: boolean;\n  parent: string | null;\n  organisationType: Array<string>;\n  organisationTypePrimary: string;\n  alternateName: Array<string>;\n  telephone: string;\n  email: string;\n  location: Array<{\n    id: string;\n    name: string;\n    geoCode: string;\n    type: string;\n  }>;\n  address: {\n    streetAddress: string;\n    addressLocality: string;\n    postalCode: string;\n  };\n  sources: Array<string>;\n  links: Array<{\n    site: string;\n    url: string;\n    orgid: string;\n  }>;\n  orgIDs: Array<string>;\n  linked_records: Array<{\n    orgid: string;\n    url: string;\n  }>;\n  dateModified: string;\n};\n\ntype Grant = {\n  grant_id: string;\n  data: GrantData;\n};\ntype GrantData = {\n  id: string;\n  title: string;\n  currency: string;\n  awardDate: string;\n  dataSource: string;\n  description: string;\n  dateModified: string;\n  plannedDates: Array<{\n    endDate: string;\n    duration: number;\n    startDate: string;\n  }>;\n  amountAwarded: number;\n  grantProgramme: Array<{\n    title: string;\n  }>;\n  fundingOrganization: Array<{\n    id: string;\n    name: string;\n  }>;\n  recipientOrganization: Array<{\n    id: string;\n    name: string;\n    location: Array<{\n      name: string;\n      geoCode: string;\n      geoCodeType: string;\n    }>;\n    charityNumber: string;\n  }>;\n};\n\nconst grant: Grant = {\n  grant_id: \"360G-CiN-2016-6291\",\n  data: {\n    id: \"360G-CiN-2016-6291\",\n    title: \"Grant to Mencap Cymru\",\n    currency: \"GBP\",\n    awardDate: \"2017-02-09T00:00:00+00:00\",\n    dataSource: \"https://www.bbcchildreninneed.co.uk/grants/bbc-children-in-need-360-giving/\",\n    description:\n      \"This project will provide disabled young people with opportunities to sustain friendships independently of their parents.  They will have increased confidence, be more independent, and have better friendships.\",\n    dateModified: \"2021-05-25T00:00:00+00:00\",\n    plannedDates: [\n      {\n        endDate: \"2020-09-01T00:00:00+00:00\",\n        duration: 36,\n        startDate: \"2017-09-01T00:00:00+00:00\",\n      },\n    ],\n    amountAwarded: 75406,\n    grantProgramme: [\n      {\n        title: \"Main Grants\",\n      },\n    ],\n    fundingOrganization: [\n      {\n        id: \"GB-CHC-802052\",\n        name: \"BBC Children in Need\",\n      },\n    ],\n    recipientOrganization: [\n      {\n        id: \"GB-CHC-222377\",\n        name: \"Mencap Cymru\",\n        location: [\n          {\n            name: \"Llanishen\",\n            geoCode: \"W05001012\",\n            geoCodeType: \"Ward\",\n          },\n        ],\n        charityNumber: \"222377\",\n      },\n    ],\n  },\n};\n\ninterface PageData {\n  count: number;\n  results: Array<{ [key: string]: any }>;\n  next?: string;\n}\n\n// Fetches a paginated list of results from a URL.  May throw exception.\ntype Results = Array<{ [key: string]: any }>;\nconst cache: { [url: string]: Results } = {};\nasync function fetchPaginatedList(url: string): Promise<Results | Error> {\n  const options = {\n    method: \"GET\",\n  };\n\n  if (cache[url]) {\n    console.log(`Cache hit for ${url}`);\n    return cache[url];\n  }\n\n  const results: Results = [];\n  let page = 0;\n  let cursor: string | null = url;\n  while (cursor !== null) {\n    const start = Date.now();\n\n    // Wait at least half a second before each request to not go over the usage limit\n    await new Promise((resolve) => setTimeout(resolve, 600));\n\n    const response = await fetch(cursor, options);\n\n    if (!response.ok) {\n      console.error(`Error! status: ${response.status}`);\n      cursor = null;\n      continue;\n    }\n\n    const data: PageData = await response.json();\n    const end = Date.now();\n\n    page += 1;\n    console.log(`Fetched page ${page} in ${(end - start) / 1000}s from ${cursor} count ${data.count}`);\n\n    results.push(...data.results);\n    cursor = data.next || null;\n  }\n\n  cache[url] = results; // Cache the results for the current URL\n  return results;\n}\n\nlet promiseChain: Promise<Results | Error> = Promise.resolve([]);\n\nasync function fetchPaginatedListSequentially(url: string | null): Promise<Results | Error> {\n  const result = promiseChain.then(() => fetchPaginatedList(url));\n  // Ensure the next call waits for the current call to finish\n  promiseChain = result.catch(() => new Error(\"Error: unexpected exception\")); // unsure if this needed\n  return result;\n}\n\nconst provider = {\n  description: \"360Giving\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\n  logoSourceAddress:\n    \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\n  logoTargetAddress: \"https://360Giving.org\", // Destination URL that the logo navigates to when selected.\n};\n\n// TODO: delete source url below\nconst provider_findThatCharity = {\n  description: \"FindThatCharity\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\n  logoSourceAddress:\n    \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\n  logoTargetAddress: \"https://findthatcharity.uk\", // Destination URL that the logo navigates to when selected.\n};\n\n/**\n * Grants received\n * @customfunction\n * @param {string} org_id\n * @returns {any} Results of the query.\n */\nasync function grants_received(org_id: string) {\n  const API_URL = \"https://api.threesixtygiving.org/api/v1/\";\n  const url = API_URL + \"org/\" + org_id + \"/grants_received/?limit=100\";\n  const value = await fetchPaginatedListSequentially(url);\n  if (value instanceof Error) {\n    return {\n      type: \"Entity\",\n      text: `${org_id} not known to have received grants`,\n      properties: { error: value.message },\n      provider: provider,\n    };\n  }\n  const grants: Grant[] = value as Grant[];\n  return {\n    type: \"Entity\",\n    text: `${org_id} received ${value.length} grants`,\n    properties: {\n      grants: mk_ExcelArray(grants.map((grant) => [grant_to_excel(grant)])),\n    },\n    provider: {\n      description: `${org_id} on 360Giving`, // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\n      logoSourceAddress:\n        \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\n      logoTargetAddress: \"https://grantnav.threesixtygiving.org/org/\" + org_id, // Destination URL that the logo navigates to when selected.\n    },\n  };\n}\n\n/**\n * Grants made\n * @customfunction\n * @param {string} org_id\n * @returns {any} Results of the query.\n */\nasync function grants_made(org_id: string) {\n  const API_URL = \"https://api.threesixtygiving.org/api/v1/\";\n  const url = API_URL + \"org/\" + org_id + \"/grants_made/?limit=100\";\n  const value = await fetchPaginatedListSequentially(url);\n  if (value instanceof Error) {\n    return {\n      type: \"Entity\",\n      text: `${org_id} not known to have made grants`,\n      properties: { error: value.message },\n      provider: provider,\n    };\n  }\n  const grants: Grant[] = value as Grant[];\n  return {\n    type: \"Entity\",\n    text: `${org_id} made ${value.length} grants`,\n    properties: {\n      grants: mk_ExcelArray(grants.map((grant) => [grant_to_excel(grant)])),\n    },\n    provider: {\n      description: `${org_id} on 360Giving`, // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\n      logoSourceAddress:\n        \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\n      logoTargetAddress: \"https://grantnav.threesixtygiving.org/org/\" + org_id, // Destination URL that the logo navigates to when selected.\n    },\n  };\n}\n\n/**\n * Who funds with who\n * @customfunction\n * @param {string[][]} grants_column - 1D array of grant entities\n * @returns {any[][]} Results of the query.\n */\nasync function who_funds_with_who(grants_column: string[][]) {\n  const result: [ExcelString, ExcelString][] = [];\n  const N = grants_column.length;\n  for (let r = 0; r < N; r++) {\n    const csv = grants_column[r][0];\n    const arr: string[] = csv.split(\";\");\n    // calculate all permutations in funder pairs\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length; j++) {\n        if (i !== j) {\n          result.push([mk_ExcelString(arr[i]), mk_ExcelString(arr[j])]);\n        }\n      }\n    }\n  }\n  // declare empty dictionary that maps two strings to a count\n  var dict: { [key: string]: number } = {};\n  for (let i = 0; i < result.length; i++) {\n    const [a, b] = result[i];\n    const key = a.basicValue + \";\" + b.basicValue;\n    dict[key] = (dict[key] || 0) + 1;\n  }\n\n  // enumerate the dictionary\n  const outcome: [ExcelString, ExcelString, ExcelDouble][] = [];\n  for (const [key, value] of Object.entries(dict)) {\n    const arr: string[] = key.split(\";\");\n    outcome.push([mk_ExcelString(arr[0]), mk_ExcelString(arr[1]), mk_ExcelDouble(value)]);\n  }\n\n  const entity = {\n    type: \"Entity\",\n    text: `Who funds with who`,\n    properties: {\n      who_funds_with_who: mk_ExcelArray(outcome),\n    },\n  };\n  return entity;\n}\n\n/**\n * FindThatCharity\n * @customfunction\n * @param {string} org_id\n * @returns {any} Results of the query.\n */\nasync function findThatCharity(org_id: string) {\n  const API_URL = \"https://findthatcharity.uk/orgid/\";\n  const org_url = API_URL + org_id;\n\n  const response = await fetch(org_url + \".json\", { method: \"GET\" });\n  if (!response.ok) {\n    return `Error! status: ${response.status}`;\n  }\n  const charity = (await response.json()) as Charity;\n  console.log(charity);\n  const result = charity_to_excel(org_url, charity);\n  return result;\n}\n\n// 2021-03-08\n// 2021-01-19T00:00:00+00:00\n\n/**\n * Interpret string as Excel date\n * @customfunction\n * @param {string} date\n * @returns {any} Results of the query.\n */\nfunction string_to_date(date_as_string: string) {\n  // Excel date is number of days since 1900-01-01\n  // https://stackoverflow.com/questions/70804856/convert-javascript-date-object-to-excel-serial-date-number\n  const date = new Date(date_as_string);\n  let days = 25569.0 + (date.getTime() - date.getTimezoneOffset() * 60 * 1000) / (1000 * 60 * 60 * 24);\n  return {\n    type: \"FormattedNumber\",\n    basicValue: days,\n    numberFormat: \"yyyy-mm-dd\",\n  };\n}\n\nfunction number_to_amount(number: number, currency: string): ExcelFormattedNumber {\n  return {\n    type: \"FormattedNumber\",\n    basicValue: number,\n    numberFormat: currency == \"GBP\" ? \"£* #,##0.00\" : \"* #,##0.00\",\n    propertyMetadata: {\n      sublabel: currency,\n    },\n  };\n}\n\nfunction grant_to_excel(grant: Grant): ExcelValue {\n  const data = grant.data;\n  const amountAwarded: ExcelValue = number_to_amount(data.amountAwarded, data.currency);\n  const funder = data.fundingOrganization.map((org) => org.name).join(\",\");\n  const recipient = data.recipientOrganization.map((org) => org.name).join(\",\");\n  const funder_id = data.fundingOrganization.map((org) => org.id).join(\",\");\n  const recipient_id = data.recipientOrganization.map((org) => org.id).join(\",\");\n  const entity: ExcelEntity = {\n    type: \"Entity\",\n    text: data.title,\n    properties: {\n      title: data.title,\n      awardDate: string_to_date(data.awardDate) as ExcelValue,\n      funder: funder,\n      recipient: recipient,\n      amountAwarded: amountAwarded,\n      description: data.description,\n      grant_id: grant.grant_id,\n      funder_id: funder_id,\n      recipient_id: recipient_id,\n      grant_nav: \"https://grantnav.threesixtygiving.org/grant/\" + grant.grant_id,\n      raw_grant_data: value_to_excel(grant),\n    },\n    layouts: {\n      compact: { icon: \"Gift\" },\n      card: {\n        title: { property: \"title\" },\n        sections: [\n          {\n            layout: \"List\",\n            properties: [\"awardDate\", \"funder\", \"recipient\", \"amountAwarded\", \"description\"],\n          },\n          {\n            layout: \"List\",\n            title: \"More\",\n            properties: [\"grant_id\", \"funder_id\", \"recipient_id\", \"grant_nav\", \"raw_grant_data\"],\n            collapsible: true,\n            collapsed: true,\n          },\n        ],\n      },\n    },\n    provider: {\n      description: data.title + \" on 360Giving GrantNav\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\n      logoSourceAddress:\n        \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\n      logoTargetAddress: \"https://grantnav.threesixtygiving.org/grant/\" + grant.grant_id, // Destination URL that the logo navigates to when selected.\n    },\n  };\n  return entity;\n}\n\nfunction charity_to_excel(org_url: string, charity: Charity): ExcelValue {\n  const entity: ExcelEntity = {\n    type: \"Entity\",\n    text: charity.name,\n    properties: {\n      name: charity.name,\n      organisationTypePrimary: charity.organisationTypePrimary,\n      description: value_to_excel(charity.description),\n      latestFinancialYearEnd: string_to_date(charity.latestFinancialYearEnd) as ExcelValue,\n      latestIncome: charity.latestIncome == null ? nullErrorValue : number_to_amount(charity.latestIncome, \"GBP\"),\n      latestSpending: charity.latestSpending == null ? nullErrorValue : number_to_amount(charity.latestSpending, \"GBP\"),\n      latestEmployees: value_to_excel(charity.latestEmployees),\n      latestVolunteers: value_to_excel(charity.latestVolunteers),\n      trusteeCount: value_to_excel(charity.trusteeCount),\n\n      telephone: value_to_excel(charity.telephone),\n      email: value_to_excel(charity.email),\n      location: charity.location.map((loc) => loc.name).join(\",\"),\n      address:\n        charity.address.streetAddress + \", \" + charity.address.addressLocality + \", \" + charity.address.postalCode,\n      url: value_to_excel(charity.url),\n\n      id: charity.id,\n      charityNumber: value_to_excel(charity.charityNumber),\n      companyNumber: value_to_excel(charity.companyNumber),\n      active: { type: \"Boolean\", basicValue: charity.active },\n      dateRegistered: string_to_date(charity.dateRegistered) as ExcelValue,\n      dateRemoved: (charity.dateRemoved == null ? \"not applicable\" : string_to_date(charity.dateRemoved)) as ExcelValue,\n\n      parent: value_to_excel(charity.parent),\n      organisationType: charity.organisationType.join(\",\"),\n      alternateName: charity.alternateName.join(\",\"),\n\n      sources: charity.sources.join(\",\"),\n      links: charity.links.map((link) => link.site + \": \" + link.url).join(\",\"),\n      orgIDs: charity.orgIDs.join(\",\"),\n      linked_records: charity.linked_records.map((rec) => rec.orgid + \": \" + rec.url).join(\",\"),\n      dateModified: string_to_date(charity.dateModified) as ExcelValue,\n      raw_charity_data: value_to_excel(charity),\n    },\n    layouts: {\n      compact: { icon: \"Organization\" },\n      card: {\n        title: { property: \"name\" },\n        sections: [\n          {\n            layout: \"List\",\n            properties: [\"description\"],\n          },\n          {\n            layout: \"List\",\n            title: `${charity.active ? \"Active\" : \"Inactive\"} ${charity.organisationTypePrimary}, number ${charity.charityNumber} since ${charity.dateRegistered}`,\n            properties: [\n              \"id\",\n              \"charityNumber\",\n              \"companyNumber\",\n              \"organisationTypePrimary\",\n              \"active\",\n              \"dateRegistered\",\n              \"dateRemoved\",\n              \"parent\",\n              \"organisationType\",\n              \"alternateName\",\n            ],\n            collapsible: true,\n            collapsed: true,\n          },\n          {\n            layout: \"List\",\n            title: \"People and Financials\",\n            properties: [\n              \"latestFinancialYearEnd\",\n              \"latestIncome\",\n              \"latestSpending\",\n              \"latestEmployees\",\n              \"latestVolunteers\",\n              \"trusteeCount\",\n            ],\n            collapsible: true,\n            collapsed: false,\n          },\n          {\n            layout: \"List\",\n            title: \"Contact\",\n            properties: [\"telephone\", \"email\", \"address\", \"url\"],\n            collapsible: true,\n            collapsed: false,\n          },\n          {\n            layout: \"List\",\n            title: \"More\",\n            properties: [\n              \"sources\",\n              \"location\",\n              \"links\",\n              \"orgIDs\",\n              \"linked_records\",\n              \"dateModified\",\n              \"raw_charity_data\",\n            ],\n            collapsible: true,\n            collapsed: true,\n          },\n        ],\n      },\n    },\n    provider: {\n      description: charity.name + \" on FindThatCharity\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\n      logoSourceAddress:\n        \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\n      logoTargetAddress: org_url, // Destination URL that the logo navigates to when selected.\n    },\n  };\n  return entity;\n}\n\n/**\n * GET JSON from URL.\n * @customfunction\n * @param {string} url\n * @returns {any} Results of the query.\n */\nasync function get_json(url) {\n  const options = {\n    method: \"GET\",\n  };\n\n  //console.log(url);\n  //console.log(options);\n\n  try {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n\n    const result = await response.json();\n    return value_to_excel(result);\n  } catch (err) {\n    console.log(err);\n    return value_to_excel(\"caught: \" + err.message);\n  }\n}\n\n/**\n * GET JSON lines from URL.\n * @customfunction\n * @param {string} url\n * @returns {any} Results of the query.\n */\nasync function get_json_lines(url) {\n  const options = {\n    method: \"GET\",\n  };\n\n  //console.log(url);\n  //console.log(options);\n\n  try {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n\n    const text = await response.text();\n    const jsons = await text.split(\"\\n\");\n    var N = jsons.length - 1; // last entry will be an empty string following last \"\\n\"\n    var array = new Array(N);\n    for (var i = 0; i < N; i++) {\n      const json = jsons[i];\n      try {\n        array[i] = JSON.parse(jsons[i]);\n      } catch (err) {\n        array[i] = \"error parsing: \" + json + \"length \" + json.length;\n        //console.log(array[i]);\n      }\n    }\n    const excel = value_to_excel({ lines: array });\n    //console.log(array);\n    return excel;\n  } catch (err) {\n    console.log(err);\n    return value_to_excel(\"caught: \" + err.message);\n  }\n}\n\n/**\n * POST JSON to URL.\n * @customfunction\n * @param {string} url\n * @param {any} json_data\n * @returns {any} Results of the query.\n */\nasync function post_json(url, json_data) {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: json_data,\n  };\n\n  //console.log(options);\n\n  try {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n\n    const result = await response.json();\n    return value_to_excel(result);\n  } catch (err) {\n    console.log(err);\n    return value_to_excel(\"caught: \" + err.message);\n  }\n}\n\n/**\n * Encode part of URI\n * @customfunction\n * @param {string} text\n * @returns {string} URI encoded text\n */\nfunction encodeURI(text: string) {\n  return encodeURIComponent(text);\n}\n\n/**\n * Constructs a Yellow entity\n * @customfunction\n * @param {string} json\n * @returns {any} Yellow value\n */\nfunction parse_JSON(json: string) {\n  const obj = JSON.parse(json);\n  return value_to_excel(obj);\n}\n\nfunction value_to_excel(value: any): ExcelValue {\n  // recall that typeof null == \"object\"\n  if (value == null) return nullErrorValue;\n  switch (typeof value) {\n    case \"boolean\":\n      return {\n        type: \"Boolean\",\n        basicValue: value,\n      };\n\n    case \"string\":\n      return {\n        type: \"String\",\n        basicValue: value,\n      };\n\n    case \"number\":\n      return {\n        type: \"Double\",\n        basicValue: value,\n      };\n\n    case \"object\":\n      if (value.constructor === Array) {\n        const length = value.length;\n        if (length == 0) return nullErrorValue; // Excel has no empty arrays\n\n        var rows = new Array(length);\n        for (var i = 0; i < length; i++) rows[i] = [value_to_non_array_excel(value[i])];\n        return mk_ExcelArray(rows);\n      }\n\n      const obj = value as Object;\n      var keys = \"\";\n      var outcome: { [key: string]: ExcelValue } = {};\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          var lowerKey = key.toLowerCase();\n          while (\n            outcome.hasOwnProperty(lowerKey) // make the lower case key unique, if need be\n          )\n            lowerKey += \"9\";\n          const value = obj[key];\n          outcome[lowerKey] = value_to_excel(value);\n          const ty = typeof value;\n          const scalar = ty === \"boolean\" || ty === \"number\" || ty === \"string\";\n          var keyvalue = lowerKey + (scalar ? \"=\" + value.toString() : \"\");\n          if (keys == \"\") keys = keyvalue;\n          else keys = keys + \",\" + keyvalue;\n        }\n      }\n\n      return {\n        type: \"Entity\",\n        text: keys,\n        properties: outcome,\n      };\n\n    default:\n      return {\n        type: \"String\",\n        basicValue: \"DEFAULT - unexpected\",\n      };\n  }\n}\n\n// Excel does not support an array nested inside another, so wrap in an entity\nfunction value_to_non_array_excel(value: any): ExcelValue {\n  if (value == null) return nullErrorValue;\n  const excel = value_to_excel(value);\n  switch (typeof value) {\n    case \"object\":\n      if (value.constructor === Array) {\n        return {\n          type: \"Entity\",\n          text: \"Nested array\",\n          properties: { array: excel },\n        };\n      }\n      return excel;\n\n    default:\n      return excel;\n  }\n}\n\nCustomFunctions.associate(\"ADD\", add);\nCustomFunctions.associate(\"CLOCK\", clock);\nCustomFunctions.associate(\"INCREMENT\", increment);\nCustomFunctions.associate(\"LOG\", logMessage);\nCustomFunctions.associate(\"GRANTS_RECEIVED\", grants_received);\nCustomFunctions.associate(\"GRANTS_MADE\", grants_made);\nCustomFunctions.associate(\"WHO_FUNDS_WITH_WHO\", who_funds_with_who);\nCustomFunctions.associate(\"FINDTHATCHARITY\", findThatCharity);\nCustomFunctions.associate(\"STRING_TO_DATE\", string_to_date);\nCustomFunctions.associate(\"GET_JSON\", get_json);\nCustomFunctions.associate(\"GET_JSON_LINES\", get_json_lines);\nCustomFunctions.associate(\"POST_JSON\", post_json);\nCustomFunctions.associate(\"ENCODEURI\", encodeURI);\nCustomFunctions.associate(\"PARSE_JSON\", parse_JSON);","export type MyType = string;\nexport const y: MyType = \"hello\";\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(93501);\n"],"names":["x","require","y","add","first","second","length","clock","invocation","timer","setInterval","time","currentTime","setResult","onCanceled","clearInterval","Date","toLocaleTimeString","increment","incrementBy","result","logMessage","message","console","log","exports","nullErrorValue","type","basicType","basicValue","mk_ExcelString","value","mk_ExcelDouble","mk_ExcelArray","elements","cache","promiseChain","Promise","resolve","fetchPaginatedListSequentially","url","then","options","method","concat","results","page","cursor","start","now","setTimeout","_a","sent","fetch","response","ok","json","error","status","data","end","count","push","apply","next","fetchPaginatedList","catch","Error","provider","description","logoSourceAddress","logoTargetAddress","string_to_date","date_as_string","date","getTime","getTimezoneOffset","numberFormat","number_to_amount","number","currency","propertyMetadata","sublabel","grant_to_excel","grant","amountAwarded","funder","fundingOrganization","map","org","name","join","recipient","recipientOrganization","funder_id","id","recipient_id","text","title","properties","awardDate","grant_id","grant_nav","raw_grant_data","value_to_excel","layouts","compact","icon","card","property","sections","layout","collapsible","collapsed","constructor","Array","length_1","rows","i","value_to_non_array_excel","obj","keys","outcome","key","hasOwnProperty","lowerKey","toLowerCase","value_1","ty","keyvalue","toString","excel","array","CustomFunctions","associate","org_id","API_URL","grants","grants_column","N","r","csv","arr","split","j","dict","a","b","_i","_b","Object","entries","_c","who_funds_with_who","org_url","charity","organisationTypePrimary","latestFinancialYearEnd","latestIncome","latestSpending","latestEmployees","latestVolunteers","trusteeCount","telephone","email","location","loc","address","streetAddress","addressLocality","postalCode","charityNumber","companyNumber","active","dateRegistered","dateRemoved","parent","organisationType","alternateName","sources","links","link","site","orgIDs","linked_records","rec","orgid","dateModified","raw_charity_data","charity_to_excel","err_1","jsons","JSON","parse","err","lines","err_2","json_data","headers","body","err_3","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","call"],"sourceRoot":""}