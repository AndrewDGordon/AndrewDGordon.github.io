{"version":3,"file":"functions.js","mappings":"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","sources":["webpack://excel-custom-functions/./src/functions/functions.ts"],"sourcesContent":["/* global clearInterval, console, CustomFunctions, setInterval */\r\n\r\n/**\r\n * Adds two numbers.\r\n * @customfunction\r\n * @param first First number\r\n * @param second Second number\r\n * @returns The sum of the two numbers.\r\n */\r\nexport function add(first: number, second: number): number {\r\n  return first + second;\r\n}\r\n\r\n/**\r\n * Displays the current time once a second.\r\n * @customfunction\r\n * @param invocation Custom function handler\r\n */\r\nexport function clock(invocation: CustomFunctions.StreamingInvocation<string>): void {\r\n  const timer = setInterval(() => {\r\n    const time = currentTime();\r\n    invocation.setResult(time);\r\n  }, 1000);\r\n\r\n  invocation.onCanceled = () => {\r\n    clearInterval(timer);\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the current time.\r\n * @returns String with the current time formatted for the current locale.\r\n */\r\nexport function currentTime(): string {\r\n  return new Date().toLocaleTimeString();\r\n}\r\n\r\n/**\r\n * Increments a value once a second.\r\n * @customfunction\r\n * @param incrementBy Amount to increment\r\n * @param invocation Custom function handler\r\n */\r\nexport function increment(incrementBy: number, invocation: CustomFunctions.StreamingInvocation<number>): void {\r\n  let result = 0;\r\n  const timer = setInterval(() => {\r\n    result += incrementBy;\r\n    invocation.setResult(result);\r\n  }, 1000);\r\n\r\n  invocation.onCanceled = () => {\r\n    clearInterval(timer);\r\n  };\r\n}\r\n\r\n/**\r\n * Writes a message to console.log().\r\n * @customfunction LOG\r\n * @param message String to write.\r\n * @returns String to write.\r\n */\r\nexport function logMessage(message: string): string {\r\n  console.log(message);\r\n\r\n  return message;\r\n}\r\n\r\n\r\n// json-excel.ts\r\n// Load this code file using ScriptLab to make JSON functionality available as custom functions in Excel\r\n// Documentation: https://docs.microsoft.com/en-us/office/dev/add-ins/excel/excel-data-types-overview\r\n// Types of custom functions: https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-json-autogeneration\r\n// Data type explorer: https://github.com/OfficeDev/Office-Add-in-samples/blob/main/Samples/excel-data-types-explorer/src/taskpane/taskpane.ts\r\n// Excel PIVOTBY: https://support.microsoft.com/en-us/office/pivotby-function-de86516a-90ad-4ced-8522-3a25fac389cf\r\n\r\n// example of a layout card\r\nconst card: Card = {\r\n  title: { \r\n      property: \"Product Name\" \r\n  },\r\n  mainImage: { \r\n      property: \"Image\" \r\n  },\r\n  sections: [\r\n      {\r\n          layout: \"List\",\r\n          properties: [\"Product ID\"]\r\n      },\r\n      {\r\n          layout: \"List\",\r\n          title: \"Quantity and price\",\r\n          collapsible: true,\r\n          collapsed: false, // This section will not be collapsed when the card is opened.\r\n          properties: [\"Quantity Per Unit\", \"Unit Price\"]\r\n      },\r\n      {\r\n          layout: \"List\",\r\n          title: \"Additional information\",\r\n          collapsible: true,\r\n          collapsed: true, // This section will be collapsed when the card is opened.\r\n          properties: [\"Discontinued\"]\r\n      }\r\n  ]\r\n};\r\n\r\ntype Card =\r\n { title: { property: string },\r\n    mainImage?: { property: string },\r\n    sections: Array<{\r\n      layout: \"List\",\r\n      title?: string,\r\n      collapsible?: boolean,\r\n      collapsed?: boolean,\r\n      properties: Array<string>\r\n    }>\r\n  };\r\n\r\ntype ExcelEntity =\r\n  {\r\n    type: \"Entity\",\r\n    text: string,\r\n    properties: { [key: string]: ExcelValue },\r\n    provider?: { description: string, logoSourceAddress: string, logoTargetAddress: string }\r\n    layouts?: {\r\n      compact?: {\r\n          icon: string // eg \"Gift\" see icon list here: https://learn.microsoft.com/en-us/javascript/api/excel/excel.entitycompactlayouticons\r\n      },\r\n      card? : Card\r\n    }\r\n  };\r\n\r\ntype ExcelArray = { type: \"Array\", elements: Array<Array<ExcelValue>> };  // elements cannot be the empty array\r\ntype ExcelString = { type: \"String\", basicValue: string };\r\ntype ExcelDouble = { type: \"Double\", basicValue: number };\r\ntype ExcelBoolean = { type: \"Boolean\", basicValue: boolean };\r\ntype ExcelError = { type: \"Error\", basicType: \"Error\", basicValue: string };\r\ntype ExcelFormattedNumber = { type: \"FormattedNumber\", basicValue: number, numberFormat: string, propertyMetadata?: { sublabel: string } };\r\n\r\n// How different types of Excel values to be returned to Excel\r\ntype ExcelValue = number | string | ExcelEntity | ExcelArray | ExcelString | ExcelDouble | ExcelBoolean | ExcelError | ExcelFormattedNumber\r\n\r\nconst nullErrorValue: ExcelError = {\r\n  type: \"Error\",\r\n  basicType: \"Error\",\r\n  basicValue: \"#NULL!\"\r\n};\r\n\r\nfunction mk_ExcelString(value: string): ExcelString {\r\n  return { type: \"String\", basicValue: value };\r\n}\r\n\r\nfunction mk_ExcelDouble(value: number): ExcelDouble {\r\n  return { type: \"Double\", basicValue: value };\r\n}\r\n\r\nfunction mk_ExcelArray(elements: Array<Array<ExcelValue>>): ExcelValue {\r\n  if (elements.length == 0) {\r\n    return nullErrorValue;\r\n  }\r\n  return { type: \"Array\", elements: elements };\r\n}\r\n\r\nconst romsey = {\r\n  \"id\": \"GB-CHC-1069905\",\r\n  \"name\": \"ROMSEY MILL TRUST\",\r\n  \"charityNumber\": \"1069905\",\r\n  \"companyNumber\": \"03556721\",\r\n  \"description\": \"Romsey Mill's activities, enabling vulnerable and disadvantaged young people children and families to thrive, include intensive 1-to-1 support, early-years care & education, Children's Centre services, parenting courses, work in schools, detached youth work, interest-based group work (e.g. sport,arts,music), training and alternative education, IAG sessions, trips & outdoor residential experiences.\",\r\n  \"url\": \"http://www.romseymill.org\",\r\n  \"latestFinancialYearEnd\": \"2023-03-31\",\r\n  \"latestIncome\": 1544824,\r\n  \"latestSpending\": 1485573,\r\n  \"latestEmployees\": 37,\r\n  \"latestVolunteers\": 164,\r\n  \"trusteeCount\": 8,\r\n  \"dateRegistered\": \"1998-06-04\",\r\n  \"dateRemoved\": null,\r\n  \"active\": true,\r\n  \"parent\": null,\r\n  \"organisationType\": [\r\n      \"Registered Company\",\r\n      \"Registered Charity\",\r\n      \"Incorporated Charity\",\r\n      \"Registered Charity (England and Wales)\"\r\n  ],\r\n  \"organisationTypePrimary\": \"Registered Charity\",\r\n  \"alternateName\": [\r\n      \"THE MILL\",\r\n      \"TRANSITIONS PROGRAMME\",\r\n      \"YOUNG PARENT PROGRAMME\",\r\n      \"SOCIAL INCLUSION PROGRAMME\",\r\n      \"UNDER FIVES PROGRAMME\",\r\n      \"ROMSEY MILL\",\r\n      \"ASPIRE\"\r\n  ],\r\n  \"telephone\": \"01223213162\",\r\n  \"email\": \"admin@romseymill.org\",\r\n  \"location\": [\r\n      {\r\n          \"id\": \"CB1 3BZ\",\r\n          \"name\": \"CB1 3BZ\",\r\n          \"geoCode\": \"E07000008\",\r\n          \"type\": \"HQ\"\r\n      },\r\n      {\r\n          \"id\": \"E10000003\",\r\n          \"name\": \"Cambridgeshire\",\r\n          \"geoCode\": \"E10000003\",\r\n          \"type\": \"AOO\"\r\n      }\r\n  ],\r\n  \"address\": {\r\n      \"streetAddress\": \"ROMSEY MILL, HEMINGFORD ROAD\",\r\n      \"addressLocality\": \"CAMBRIDGE\",\r\n      \"postalCode\": \"CB1 3BZ\"\r\n  },\r\n  \"sources\": [\r\n      \"ccew\"\r\n  ],\r\n  \"links\": [\r\n      {\r\n          \"site\": \"Find that Charity\",\r\n          \"url\": \"https://findthatcharity.uk/orgid/GB-CHC-1069905.json\",\r\n          \"orgid\": \"GB-CHC-1069905\"\r\n      },\r\n      {\r\n          \"site\": \"romseymill.org\",\r\n          \"url\": \"http://www.romseymill.org\",\r\n          \"orgid\": \"GB-CHC-1069905\"\r\n      },\r\n      {\r\n          \"site\": \"Charity Commission England and Wales\",\r\n          \"url\": \"https://register-of-charities.charitycommission.gov.uk/charity-details/?regId=1069905&subId=0\",\r\n          \"orgid\": \"GB-CHC-1069905\"\r\n      },\r\n      {\r\n          \"site\": \"CharityBase\",\r\n          \"url\": \"https://search.charitybase.uk/chc/1069905\",\r\n          \"orgid\": \"GB-CHC-1069905\"\r\n      },\r\n      {\r\n          \"site\": \"Giving is Great\",\r\n          \"url\": \"https://givingisgreat.org/charitydetail/?regNo=1069905\",\r\n          \"orgid\": \"GB-CHC-1069905\"\r\n      },\r\n      {\r\n          \"site\": \"Companies House\",\r\n          \"url\": \"https://find-and-update.company-information.service.gov.uk/company/03556721\",\r\n          \"orgid\": \"GB-COH-03556721\"\r\n      },\r\n      {\r\n          \"site\": \"Opencorporates\",\r\n          \"url\": \"https://opencorporates.com/companies/gb/03556721\",\r\n          \"orgid\": \"GB-COH-03556721\"\r\n      }\r\n  ],\r\n  \"orgIDs\": [\r\n      \"GB-COH-03556721\",\r\n      \"GB-CHC-1069905\"\r\n  ],\r\n  \"linked_records\": [\r\n      {\r\n          \"orgid\": \"GB-CHC-1069905\",\r\n          \"url\": \"https://findthatcharity.uk/orgid/GB-CHC-1069905.json\"\r\n      },\r\n      {\r\n          \"orgid\": \"GB-COH-03556721\",\r\n          \"url\": \"https://findthatcharity.uk/orgid/GB-COH-03556721.json\"\r\n      }\r\n  ],\r\n  \"dateModified\": \"2024-07-27T01:08:56.178Z\"\r\n}\r\n\r\ntype Charity = {\r\n  id: string;\r\n  name: string;\r\n  charityNumber: string;\r\n  companyNumber: string;\r\n  description: string;\r\n  url: string;\r\n  latestFinancialYearEnd: string;\r\n  latestIncome: number;\r\n  latestSpending: number;\r\n  latestEmployees: number;\r\n  latestVolunteers: number;\r\n  trusteeCount: number;\r\n  dateRegistered: string;\r\n  dateRemoved: string | null;\r\n  active: boolean;\r\n  parent: string | null;\r\n  organisationType: Array<string>;\r\n  organisationTypePrimary: string;\r\n  alternateName: Array<string>;\r\n  telephone: string;\r\n  email: string;\r\n  location: Array<{\r\n    id: string;\r\n    name: string;\r\n    geoCode: string;\r\n    type: string;\r\n  }>;\r\n  address: {\r\n    streetAddress: string;\r\n    addressLocality: string;\r\n    postalCode: string;\r\n  };\r\n  sources: Array<string>;\r\n  links: Array<{\r\n    site: string;\r\n    url: string;\r\n    orgid: string;\r\n  }>;\r\n  orgIDs: Array<string>;\r\n  linked_records: Array<{\r\n    orgid: string;\r\n    url: string;\r\n  }>;\r\n  dateModified: string;\r\n};\r\n\r\ntype Grant = {\r\n  grant_id: string;\r\n  data: GrantData\r\n}\r\ntype GrantData = {\r\n  id: string;\r\n  title: string;\r\n  currency: string;\r\n  awardDate: string;\r\n  dataSource: string;\r\n  description: string;\r\n  dateModified: string;\r\n  plannedDates: Array<{\r\n    endDate: string;\r\n    duration: number;\r\n    startDate: string;\r\n  }>;\r\n  amountAwarded: number;\r\n  grantProgramme: Array<{\r\n    title: string;\r\n  }>;\r\n  fundingOrganization: Array<{\r\n    id: string;\r\n    name: string;\r\n  }>;\r\n  recipientOrganization: Array<{\r\n    id: string;\r\n    name: string;\r\n    location: Array<{\r\n      name: string;\r\n      geoCode: string;\r\n      geoCodeType: string;\r\n    }>;\r\n    charityNumber: string;\r\n  }>;\r\n};\r\n\r\nconst grant: Grant =\r\n{\r\n  \"grant_id\": \"360G-CiN-2016-6291\",\r\n  \"data\": {\r\n      \"id\": \"360G-CiN-2016-6291\",\r\n      \"title\": \"Grant to Mencap Cymru\",\r\n      \"currency\": \"GBP\",\r\n      \"awardDate\": \"2017-02-09T00:00:00+00:00\",\r\n      \"dataSource\": \"https://www.bbcchildreninneed.co.uk/grants/bbc-children-in-need-360-giving/\",\r\n      \"description\": \"This project will provide disabled young people with opportunities to sustain friendships independently of their parents.  They will have increased confidence, be more independent, and have better friendships.\",\r\n      \"dateModified\": \"2021-05-25T00:00:00+00:00\",\r\n      \"plannedDates\": [\r\n          {\r\n              \"endDate\": \"2020-09-01T00:00:00+00:00\",\r\n              \"duration\": 36,\r\n              \"startDate\": \"2017-09-01T00:00:00+00:00\"\r\n          }\r\n      ],\r\n      \"amountAwarded\": 75406,\r\n      \"grantProgramme\": [\r\n          {\r\n              \"title\": \"Main Grants\"\r\n          }\r\n      ],\r\n      \"fundingOrganization\": [\r\n          {\r\n              \"id\": \"GB-CHC-802052\",\r\n              \"name\": \"BBC Children in Need\"\r\n          }\r\n      ],\r\n      \"recipientOrganization\": [\r\n          {\r\n              \"id\": \"GB-CHC-222377\",\r\n              \"name\": \"Mencap Cymru\",\r\n              \"location\": [\r\n                  {\r\n                      \"name\": \"Llanishen\",\r\n                      \"geoCode\": \"W05001012\",\r\n                      \"geoCodeType\": \"Ward\"\r\n                  }\r\n              ],\r\n              \"charityNumber\": \"222377\"\r\n          }\r\n      ]\r\n  }};\r\n\r\ninterface PageData {\r\n  count: number;\r\n  results: Array<{ [key: string]: any }>;\r\n  next?: string;\r\n}\r\n\r\n// Fetches a paginated list of results from a URL.  May throw exception.\r\ntype Results = Array<{ [key: string]: any }>\r\nconst cache: { [url: string]: Results } = {};\r\nasync function fetchPaginatedList(url: string): Promise<Results | Error> {\r\n  const options = {\r\n    method: \"GET\"\r\n  };\r\n\r\n  if (cache[url]) {\r\n    console.log(`Cache hit for ${url}`);\r\n    return cache[url];\r\n  }\r\n\r\n  const results: Results = [];\r\n  let page = 0;\r\n  let cursor: string | null = url\r\n  while (cursor !== null) {\r\n    const start = Date.now();\r\n\r\n    // Wait at least half a second before each request to not go over the usage limit\r\n    await new Promise((resolve) => setTimeout(resolve, 600));\r\n\r\n    const response = await fetch(cursor, options);\r\n\r\n    if (!response.ok) {\r\n      console.error(`Error! status: ${response.status}`);\r\n      cursor = null;\r\n      continue;\r\n    }\r\n\r\n    const data: PageData = await response.json();\r\n    const end = Date.now();\r\n\r\n    page += 1;\r\n    console.log(`Fetched page ${page} in ${(end - start) / 1000}s from ${cursor} count ${data.count}`);\r\n     \r\n    results.push(...data.results);\r\n    cursor = data.next || null;\r\n  }\r\n\r\n  cache[url] = results; // Cache the results for the current URL\r\n  return results;\r\n}\r\n\r\nlet promiseChain: Promise<Results | Error> = Promise.resolve([]);\r\n\r\nasync function fetchPaginatedListSequentially(url: string | null): Promise<Results | Error> {\r\n  const result = promiseChain.then(() => fetchPaginatedList(url));\r\n  // Ensure the next call waits for the current call to finish\r\n  promiseChain = result.catch(() => new Error(\"Error: unexpected exception\"));  // unsure if this needed\r\n  return result;\r\n}\r\n\r\nconst provider = {\r\n  description: \"360Giving\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\r\n  logoSourceAddress: \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\r\n  logoTargetAddress: \"https://360Giving.org\" // Destination URL that the logo navigates to when selected.\r\n}\r\n\r\n\r\n// TODO: delete source url below\r\nconst provider_findThatCharity = {\r\n  description: \"FindThatCharity\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\r\n  logoSourceAddress: \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\r\n  logoTargetAddress: \"https://findthatcharity.uk\" // Destination URL that the logo navigates to when selected.\r\n}\r\n\r\n/**\r\n * Grants received\r\n * @customfunction\r\n * @param {string} org_id\r\n * @returns {any} Results of the query.\r\n */\r\nasync function grants_received(org_id: string) {\r\n  const API_URL = \"https://api.threesixtygiving.org/api/v1/\";\r\n  const url = API_URL + \"org/\" + org_id + \"/grants_received/?limit=100\";\r\n  const value = await fetchPaginatedListSequentially(url);\r\n  if (value instanceof Error) {\r\n    return {\r\n      type: \"Entity\",\r\n      text: `${org_id} not known to have received grants`,\r\n      properties: { error: value.message },\r\n      provider: provider\r\n    };\r\n  }\r\n  const grants: Grant[] = value as Grant[];\r\n  return {\r\n    type: \"Entity\",\r\n    text: `${org_id} received ${value.length} grants`,\r\n    properties: {\r\n      grants: mk_ExcelArray(grants.map(grant => [grant_to_excel(grant)]))\r\n    },\r\n    provider: {\r\n      description: `${org_id} on 360Giving`, // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\r\n      logoSourceAddress: \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\r\n      logoTargetAddress: \"https://grantnav.threesixtygiving.org/org/\" + org_id // Destination URL that the logo navigates to when selected.\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Grants made\r\n * @customfunction\r\n * @param {string} org_id\r\n * @returns {any} Results of the query.\r\n */\r\nasync function grants_made(org_id: string) {\r\n  const API_URL = \"https://api.threesixtygiving.org/api/v1/\";\r\n  const url = API_URL + \"org/\" + org_id + \"/grants_made/?limit=100\";\r\n  const value = await fetchPaginatedListSequentially(url);\r\n  if (value instanceof Error) {\r\n    return {\r\n      type: \"Entity\",\r\n      text: `${org_id} not known to have made grants`,\r\n      properties: { error: value.message },\r\n      provider: provider\r\n    };\r\n  }\r\n  const grants: Grant[] = value as Grant[];\r\n  return {\r\n    type: \"Entity\",\r\n    text: `${org_id} made ${value.length} grants`,\r\n    properties: {\r\n      grants: mk_ExcelArray(grants.map(grant => [ grant_to_excel(grant) ]))\r\n    },\r\n    provider: {\r\n      description: `${org_id} on 360Giving`, // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\r\n      logoSourceAddress: \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\r\n      logoTargetAddress: \"https://grantnav.threesixtygiving.org/org/\"+org_id // Destination URL that the logo navigates to when selected.\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Who funds with who\r\n * @customfunction\r\n * @param {string[][]} grants_column - 1D array of grant entities\r\n * @returns {any[][]} Results of the query.\r\n */\r\nasync function who_funds_with_who(grants_column: string[][]) {\r\n  const result: [ExcelString, ExcelString][] = [];\r\n  const N = grants_column.length;\r\n  for(let r=0; r<N; r++) {\r\n    const csv = grants_column[r][0];\r\n    const arr: string[] = csv.split(\";\");\r\n    // calculate all permutations in funder pairs\r\n    for (let i = 0; i < arr.length; i++) {\r\n      for (let j = 0; j < arr.length; j++) {\r\n        if (i !== j) {\r\n          result.push([mk_ExcelString(arr[i]), mk_ExcelString(arr[j])]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // declare empty dictionary that maps two strings to a count\r\n  var dict: { [key: string]: number } = {};\r\n  for(let i=0; i<result.length; i++) {\r\n    const [a,b] = result[i];\r\n    const key = a.basicValue + \";\" + b.basicValue;\r\n    dict[key] = (dict[key] || 0) + 1;\r\n  }\r\n\r\n  // enumerate the dictionary\r\n  const outcome: [ExcelString, ExcelString, ExcelDouble][] = [];\r\n  for (const [key, value] of Object.entries(dict)) {\r\n    const arr: string[] = key.split(\";\");\r\n    outcome.push([mk_ExcelString(arr[0]), mk_ExcelString(arr[1]), mk_ExcelDouble(value)]);\r\n  }\r\n\r\n  const entity ={\r\n    type: \"Entity\",\r\n    text: `Who funds with who`,\r\n    properties: {\r\n      who_funds_with_who: mk_ExcelArray(outcome)\r\n    }\r\n  };\r\n  return entity;\r\n}\r\n\r\n/**\r\n * FindThatCharity\r\n * @customfunction\r\n * @param {string} org_id\r\n * @returns {any} Results of the query.\r\n */\r\nasync function findThatCharity(org_id: string) {\r\n  const API_URL = \"https://findthatcharity.uk/orgid/\";\r\n  const org_url = API_URL + org_id;\r\n\r\n  const response = await fetch(org_url + \".json\", { method: \"GET\" });\r\n  if (!response.ok) {\r\n     return `Error! status: ${response.status}`;\r\n  }\r\n  const charity = await response.json() as Charity;\r\n  console.log(charity);\r\n  const result = charity_to_excel(org_url, charity);\r\n  return result\r\n}\r\n\r\n\r\n// 2021-03-08\r\n// 2021-01-19T00:00:00+00:00\r\n\r\n/**\r\n * Interpret string as Excel date\r\n * @customfunction\r\n * @param {string} date\r\n * @returns {any} Results of the query.\r\n */\r\nfunction string_to_date(date_as_string: string) {\r\n  // Excel date is number of days since 1900-01-01\r\n  // https://stackoverflow.com/questions/70804856/convert-javascript-date-object-to-excel-serial-date-number\r\n  const date = new Date(date_as_string);\r\n  let days = 25569.0 + ((date.getTime() - (date.getTimezoneOffset() * 60 * 1000)) / (1000 * 60 * 60 * 24));\r\n  return {\r\n    type: \"FormattedNumber\",\r\n    basicValue: days,\r\n    numberFormat: \"yyyy-mm-dd\",\r\n  };\r\n}\r\n\r\nfunction number_to_amount(number: number, currency: string): ExcelFormattedNumber {\r\n  return {\r\n    type: \"FormattedNumber\",\r\n    basicValue: number,\r\n    numberFormat: currency==\"GBP\" ? \"£* #,##0.00\" : \"* #,##0.00\",\r\n    propertyMetadata: {\r\n      sublabel: currency\r\n    }\r\n  };\r\n}\r\n\r\nfunction grant_to_excel(grant: Grant): ExcelValue {\r\n  const data = grant.data;\r\n  const amountAwarded: ExcelValue = number_to_amount(data.amountAwarded, data.currency);\r\n  const funder = data.fundingOrganization.map(org => org.name).join(\",\");\r\n  const recipient = data.recipientOrganization.map(org => org.name).join(\",\");\r\n  const funder_id = data.fundingOrganization.map(org => org.id).join(\",\");\r\n  const recipient_id = data.recipientOrganization.map(org => org.id).join(\",\");\r\n  const entity: ExcelEntity = {\r\n    type: \"Entity\",\r\n    text: data.title,\r\n    properties: {\r\n      title: data.title,\r\n      awardDate: string_to_date(data.awardDate) as ExcelValue,\r\n      funder: funder,\r\n      recipient: recipient,\r\n      amountAwarded: amountAwarded,\r\n      description: data.description,\r\n      grant_id: grant.grant_id,\r\n      funder_id: funder_id,\r\n      recipient_id: recipient_id,\r\n      grant_nav: \"https://grantnav.threesixtygiving.org/grant/\"+grant.grant_id,\r\n      raw_grant_data: value_to_excel(grant)\r\n    },\r\n    layouts: {\r\n      compact: { icon: \"Gift\" },\r\n      card: {\r\n        title: { property: \"title\" },\r\n        sections: [\r\n          {\r\n            layout: \"List\",\r\n            properties: [\"awardDate\", \"funder\", \"recipient\", \"amountAwarded\",\"description\" ]\r\n          },\r\n          {\r\n            layout: \"List\",\r\n            title: \"More\",\r\n            properties: [\"grant_id\",\"funder_id\",\"recipient_id\",\"grant_nav\",\"raw_grant_data\"],\r\n            collapsible: true,\r\n            collapsed: true\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    provider: {\r\n      description: data.title + \" on 360Giving GrantNav\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\r\n      logoSourceAddress: \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\r\n      logoTargetAddress: \"https://grantnav.threesixtygiving.org/grant/\"+grant.grant_id // Destination URL that the logo navigates to when selected.\r\n    }\r\n  };\r\n  return entity;\r\n}\r\n\r\nfunction charity_to_excel(org_url: string, charity: Charity): ExcelValue {\r\n  const entity: ExcelEntity = {\r\n    type: \"Entity\",\r\n    text: charity.name,\r\n    properties: {\r\n      name: charity.name,\r\n      organisationTypePrimary: charity.organisationTypePrimary,\r\n      description: value_to_excel(charity.description),\r\n      latestFinancialYearEnd: string_to_date(charity.latestFinancialYearEnd) as ExcelValue,\r\n      latestIncome: (charity.latestIncome==null ? nullErrorValue : number_to_amount(charity.latestIncome, \"GBP\")),\r\n      latestSpending: (charity.latestSpending==null ? nullErrorValue : number_to_amount(charity.latestSpending, \"GBP\")),\r\n      latestEmployees: value_to_excel(charity.latestEmployees),\r\n      latestVolunteers: value_to_excel(charity.latestVolunteers),\r\n      trusteeCount: value_to_excel(charity.trusteeCount),\r\n\r\n      telephone: value_to_excel(charity.telephone),\r\n      email: value_to_excel(charity.email),\r\n      location: charity.location.map(loc => loc.name).join(\",\"),\r\n      address: charity.address.streetAddress + \", \" + charity.address.addressLocality + \", \" + charity.address.postalCode,\r\n      url: value_to_excel(charity.url),\r\n\r\n      id: charity.id,\r\n      charityNumber: value_to_excel(charity.charityNumber),\r\n      companyNumber: value_to_excel(charity.companyNumber),\r\n      active: { type: \"Boolean\", basicValue: charity.active },\r\n      dateRegistered: string_to_date(charity.dateRegistered) as ExcelValue,\r\n      dateRemoved: (charity.dateRemoved==null ? \"not applicable\" : string_to_date(charity.dateRemoved)) as ExcelValue,\r\n      \r\n      parent: value_to_excel(charity.parent),\r\n      organisationType: charity.organisationType.join(\",\"),\r\n      alternateName: charity.alternateName.join(\",\"),\r\n      \r\n      sources: charity.sources.join(\",\"),\r\n      links: charity.links.map(link => link.site + \": \" + link.url).join(\",\"),\r\n      orgIDs: charity.orgIDs.join(\",\"),\r\n      linked_records: charity.linked_records.map(rec => rec.orgid + \": \" + rec.url).join(\",\"),\r\n      dateModified: string_to_date(charity.dateModified) as ExcelValue,\r\n      raw_charity_data: value_to_excel(charity)\r\n    },\r\n    layouts: {\r\n      compact: { icon: \"Organization\" },\r\n      card: {\r\n        title: { property: \"name\" },\r\n        sections: [\r\n          {\r\n            layout: \"List\",\r\n            properties: [\"description\"]\r\n          }, {\r\n            layout: \"List\",\r\n            title: `${charity.active ? \"Active\" : \"Inactive\"} ${charity.organisationTypePrimary}, number ${charity.charityNumber} since ${charity.dateRegistered}`,\r\n            properties: [\"id\", \"charityNumber\", \"companyNumber\",\r\n              \"organisationTypePrimary\", \"active\", \"dateRegistered\", \"dateRemoved\", \"parent\", \"organisationType\", \"alternateName\"],\r\n            collapsible: true,\r\n            collapsed: true\r\n          },\r\n          {\r\n            layout: \"List\",\r\n            title: \"People and Financials\",\r\n            properties: [\"latestFinancialYearEnd\", \"latestIncome\", \"latestSpending\", \"latestEmployees\", \"latestVolunteers\", \"trusteeCount\"],\r\n            collapsible: true,\r\n            collapsed: false\r\n          },\r\n          {\r\n            layout: \"List\",\r\n            title: \"Contact\",\r\n            properties: [\"telephone\", \"email\", \"address\", \"url\"],\r\n            collapsible: true,\r\n            collapsed: false\r\n          },\r\n          {\r\n            layout: \"List\",\r\n            title: \"More\",\r\n            properties: [\"sources\", \"location\", \"links\", \"orgIDs\", \"linked_records\", \"dateModified\", \"raw_charity_data\"],\r\n            collapsible: true,\r\n            collapsed: true\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    provider: {\r\n      description: charity.name + \" on FindThatCharity\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\r\n      logoSourceAddress: \"https://www.threesixtygiving.org/wp-content/themes/360giving2020/assets/images/360-logos/360giving-main.svg\", // Source URL of the logo to display.\r\n      logoTargetAddress: org_url // Destination URL that the logo navigates to when selected.\r\n    }\r\n  };\r\n  return entity;\r\n}\r\n\r\n/**\r\n * GET JSON from URL.\r\n * @customfunction\r\n * @param {string} url\r\n * @returns {any} Results of the query.\r\n */\r\nasync function get_json(url) {\r\n  const options = {\r\n    method: \"GET\"\r\n  };\r\n\r\n  //console.log(url);\r\n  //console.log(options);\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) {\r\n      throw new Error(`Error! status: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    return value_to_excel(result);\r\n  } catch (err) {\r\n    console.log(err);\r\n    return value_to_excel(\"caught: \" + err.message);\r\n  }\r\n}\r\n\r\n/**\r\n * GET JSON lines from URL.\r\n * @customfunction\r\n * @param {string} url\r\n * @returns {any} Results of the query.\r\n */\r\nasync function get_json_lines(url) {\r\n  const options = {\r\n    method: \"GET\"\r\n  };\r\n\r\n  //console.log(url);\r\n  //console.log(options);\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) {\r\n      throw new Error(`Error! status: ${response.status}`);\r\n    }\r\n\r\n    const text = await response.text();\r\n    const jsons = await text.split(\"\\n\");\r\n    var N = jsons.length - 1; // last entry will be an empty string following last \"\\n\"\r\n    var array = new Array(N);\r\n    for (var i = 0; i < N; i++) {\r\n      const json = jsons[i];\r\n      try {\r\n        array[i] = JSON.parse(jsons[i]);\r\n      } catch (err) {\r\n        array[i] = \"error parsing: \" + json + \"length \" + json.length;\r\n        //console.log(array[i]);\r\n      }\r\n    }\r\n    const excel = value_to_excel({ lines: array });\r\n    //console.log(array);\r\n    return excel;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return value_to_excel(\"caught: \" + err.message);\r\n  }\r\n}\r\n\r\n/**\r\n * POST JSON to URL.\r\n * @customfunction\r\n * @param {string} url\r\n * @param {any} json_data\r\n * @returns {any} Results of the query.\r\n */\r\nasync function post_json(url, json_data) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: json_data\r\n  };\r\n\r\n  //console.log(options);\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) {\r\n      throw new Error(`Error! status: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    return value_to_excel(result);\r\n  } catch (err) {\r\n    console.log(err);\r\n    return value_to_excel(\"caught: \" + err.message);\r\n  }\r\n}\r\n\r\n/**\r\n * Encode part of URI\r\n * @customfunction\r\n * @param {string} text\r\n * @returns {string} URI encoded text\r\n */\r\nfunction encodeURI(text: string) {\r\n  return encodeURIComponent(text);\r\n}\r\n\r\n/**\r\n * Constructs a Yellow entity\r\n * @customfunction\r\n * @param {string} json\r\n * @returns {any} Yellow value\r\n */\r\nfunction parse_JSON(json: string) {\r\n  const obj = JSON.parse(json);\r\n  return value_to_excel(obj);\r\n}\r\n\r\nfunction value_to_excel(value:any): ExcelValue {\r\n  // recall that typeof null == \"object\"\r\n  if (value == null) return nullErrorValue;\r\n  switch (typeof value) {\r\n    case \"boolean\":\r\n      return {\r\n        type: \"Boolean\",\r\n        basicValue: value\r\n      };\r\n\r\n    case \"string\":\r\n      return {\r\n        type: \"String\",\r\n        basicValue: value\r\n      };\r\n\r\n    case \"number\":\r\n      return {\r\n        type: \"Double\",\r\n        basicValue: value\r\n      };\r\n\r\n    case \"object\":\r\n      if (value.constructor === Array) {\r\n        const length = value.length;\r\n        if (length == 0) return nullErrorValue; // Excel has no empty arrays\r\n\r\n        var rows = new Array(length);\r\n        for (var i = 0; i < length; i++) rows[i] = [value_to_non_array_excel(value[i])];\r\n        return mk_ExcelArray(rows)\r\n      }\r\n\r\n      const obj = value as Object;\r\n      var keys = \"\";\r\n      var outcome: { [key: string]: ExcelValue } = {};\r\n      for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          var lowerKey = key.toLowerCase();\r\n          while (\r\n            outcome.hasOwnProperty(lowerKey) // make the lower case key unique, if need be\r\n          )\r\n            lowerKey += \"9\";\r\n          const value = obj[key];\r\n          outcome[lowerKey] = value_to_excel(value);\r\n          const ty = typeof value;\r\n          const scalar = ty === \"boolean\" || ty === \"number\" || ty === \"string\";\r\n          var keyvalue = lowerKey + (scalar ? \"=\" + value.toString() : \"\");\r\n          if (keys == \"\") keys = keyvalue;\r\n          else keys = keys + \",\" + keyvalue;\r\n        }\r\n      }\r\n\r\n      return {\r\n        type: \"Entity\",\r\n        text: keys,\r\n        properties: outcome\r\n      };\r\n\r\n    default:\r\n      return {\r\n        type: \"String\",\r\n        basicValue: \"DEFAULT - unexpected\"\r\n      };\r\n  }\r\n}\r\n\r\n// Excel does not support an array nested inside another, so wrap in an entity\r\nfunction value_to_non_array_excel(value:any): ExcelValue {\r\n  if (value == null) return nullErrorValue;\r\n  const excel = value_to_excel(value);\r\n  switch (typeof value) {\r\n    case \"object\":\r\n      if (value.constructor === Array) {\r\n        return {\r\n          type: \"Entity\",\r\n          text: \"Nested array\",\r\n          properties: { array: excel }\r\n        };\r\n      }\r\n      return excel;\r\n\r\n    default:\r\n      return excel;\r\n  }\r\n}\r\n\nCustomFunctions.associate(\"ADD\", add);\nCustomFunctions.associate(\"CLOCK\", clock);\nCustomFunctions.associate(\"INCREMENT\", increment);\nCustomFunctions.associate(\"LOG\", logMessage);\nCustomFunctions.associate(\"GRANTS_RECEIVED\", grants_received);\nCustomFunctions.associate(\"GRANTS_MADE\", grants_made);\nCustomFunctions.associate(\"WHO_FUNDS_WITH_WHO\", who_funds_with_who);\nCustomFunctions.associate(\"FINDTHATCHARITY\", findThatCharity);\nCustomFunctions.associate(\"STRING_TO_DATE\", string_to_date);\nCustomFunctions.associate(\"GET_JSON\", get_json);\nCustomFunctions.associate(\"GET_JSON_LINES\", get_json_lines);\nCustomFunctions.associate(\"POST_JSON\", post_json);\nCustomFunctions.associate(\"ENCODEURI\", encodeURI);\nCustomFunctions.associate(\"PARSE_JSON\", parse_JSON);"],"names":["nullErrorValue","type","basicType","basicValue","mk_ExcelString","value","mk_ExcelDouble","mk_ExcelArray","elements","length","cache","promiseChain","Promise","resolve","async","fetchPaginatedListSequentially","url","result","then","options","method","console","log","results","page","cursor","start","Date","now","setTimeout","response","fetch","ok","error","status","data","json","end","count","push","next","fetchPaginatedList","catch","Error","provider","description","logoSourceAddress","logoTargetAddress","string_to_date","date_as_string","date","getTime","getTimezoneOffset","numberFormat","number_to_amount","number","currency","propertyMetadata","sublabel","grant_to_excel","grant","amountAwarded","funder","fundingOrganization","map","org","name","join","recipient","recipientOrganization","funder_id","id","recipient_id","text","title","properties","awardDate","grant_id","grant_nav","raw_grant_data","value_to_excel","layouts","compact","icon","card","property","sections","layout","collapsible","collapsed","constructor","Array","rows","i","value_to_non_array_excel","obj","keys","outcome","key","hasOwnProperty","lowerKey","toLowerCase","ty","keyvalue","toString","excel","array","CustomFunctions","associate","first","second","invocation","timer","setInterval","time","toLocaleTimeString","setResult","onCanceled","clearInterval","incrementBy","message","org_id","API_URL","grants","grants_column","N","r","arr","split","j","dict","a","b","Object","entries","who_funds_with_who","org_url","charity","organisationTypePrimary","latestFinancialYearEnd","latestIncome","latestSpending","latestEmployees","latestVolunteers","trusteeCount","telephone","email","location","loc","address","streetAddress","addressLocality","postalCode","charityNumber","companyNumber","active","dateRegistered","dateRemoved","parent","organisationType","alternateName","sources","links","link","site","orgIDs","linked_records","rec","orgid","dateModified","raw_charity_data","charity_to_excel","err","jsons","JSON","parse","lines","json_data","headers","body","encodeURIComponent"],"sourceRoot":""}